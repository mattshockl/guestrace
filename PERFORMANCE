This is a log of guestrace main-loop performance, measured by running:

	#include <stdio.h>
	#include <unistd.h>

	#define MULT 1000

	int
	main(int argc, char *argv[])
	{
		const long MAX = sysconf(_SC_OPEN_MAX);
		printf("%ld iterations\n", MAX * MULT);
		for (int i = 0; i < MULT; i++) {
			for (long j = MAX; j >= 0; j--) {
				close(j);
			}
		}
	}

with:

	gcc -O2 -o perf perf.c
	time ./perf

COMPUTER COMMIT   ITERATIONS NATIVE GUESTRACE -s
======== ======== ========== ====== ============

imp      19722799 10240      0.004  2.612
imp      19722799 10240      0.004  2.621
imp      19722799 10240      0.004  2.608

imp      7713e259 10240      0.005  2.358
imp      7713e259 10240      0.004  2.379
imp      7713e259 10240      0.005  2.343

imp      6f5018b2 10240      0.009  2.456
imp      6f5018b2 10240      0.007  2.454
imp      6f5018b2 10240      0.007  2.419

imp      e4139e9d 10240      0.004  2.381
imp      e4139e9d 10240      0.004  2.319
imp      e4139e9d 10240      0.005  2.210

imp      1130f838 10240      0.004  2.394
imp      1130f838 10240      0.001  2.464
imp      1130f838 10240      0.004  2.430

imp      1e1a2baa 10240      0.004  2.610
imp      1e1a2baa 10240      0.004  2.640
imp      1e1a2baa 10240      0.004  2.633

imp      a3b373b6 10240      0.004  1.557
imp      a3b373b6 10240      0.004  1.452
imp      a3b373b6 10240      0.004  1.492

These are the remaining parts of gt_breakpoint_cb which make up most of
the function's runtime:

	Call: Read return address
	Call: Update stack (~93 usec)
	Ret: Get PID (~125 usec)
	Ret: Set RIP (~350 usec)

Windows testing is more informal. From "Starting Windows" disappearing
to blue background.


COMPUTER COMMIT   TIME
======== ======== ====

imp      bf46901a 1:36
